[include shell_command.cfg]
[include mainsail.cfg]
[include macro.cfg]
#[endstop_phase]
#[include PIS.cfg]

# Enable object exclusion
[exclude_object]

[respond]

# Enable arcs support
[gcode_arcs]
resolution: 0.1

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_3E0035000F50535556323420-if00
# CAN bus is also available on this board

[virtual_sdcard]
path: /home/akula/mIDEX02_data/gcodes
on_error_gcode: CANCEL_PRINT

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 8000 ; was 5300
minimum_cruise_ratio: 0.5
max_z_velocity: 20
max_z_accel: 500

[bed_screws]
screw1: 66, 129
screw2: 165, 129
screw3: 114, 0

# This file contains common pin mappings for the BigTreeTech Octopus
# (non-Pro) boards.

# Important! Do not use this config with an Octopus Pro v1.1 board as
# doing so could result in a heater being inadvertently enabled.

# To use this config, start by identifying the micro-controller on the
# board - it may be an STM32F446, or STM32F429.  Select the
# appropriate micro-controller in "make menuconfig" and select "Enable
# low-level configuration options". For STM32F446 boards the firmware
# should be compiled with a "32KiB bootloader" and a "12MHz crystal"
# clock reference. For STM32F429 boards use a "32KiB bootloader" and
# an "8MHz crystal".

# See docs/Config_Reference.md for a description of parameters.

# https://github.com/FYSETC/FYSETC-PortableInputShaper

# My Akula-class m_IDEX has STM32F446 board the firmware should be
# compiled with a "32KiB bootloader" and a "12MHz crystal" clock reference.

# Driver0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
microsteps: 16
rotation_distance: 32 ; 16T x 2mm
#   Distance (in mm) that the axis travels with one full rotation of
#   the stepper motor (or final gear if gear_ratio is specified).
#   This parameter must be provided.
full_steps_per_rotation: 200
#   The number of full steps for one rotation of the stepper motor.
#   Set this to 200 for a 1.8 degree stepper motor or set to 400 for a
#   0.9 degree motor. The default is 200.
endstop_pin: PG6
position_endstop: -43
position_max: 266
position_min: -63
homing_speed: 100
homing_retract_dist: 5.0
homing_retract_speed: 30
second_homing_speed: 1

# Driver1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
microsteps: 16
rotation_distance: 32
endstop_pin: PG9
position_endstop: 145
position_max: 145
homing_speed: 75
homing_retract_dist: 5.0
homing_retract_speed: 30
second_homing_speed: 1

# Driver2
[stepper_y1]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
microsteps: 16
rotation_distance: 32


# Driver3
# The Octopus only has 4 heater outputs which leaves an extra stepper
# This can be used for a second Z stepper, dual_carriage, extruder co-stepper,
# or other accesory such as an MMU
[stepper_z]
step_pin: PG4
dir_pin: PC1
enable_pin: !PA0
endstop_pin: PG10
microsteps: 32
rotation_distance: 8
endstop_pin: PG10
#position_endstop: -2.6
position_min: -15
position_max: 200

homing_speed: 20
#   Maximum velocity (in mm/s) of the stepper when homing. The default
#   is 5mm/s.
homing_retract_dist: 5.0
#   Distance to backoff (in mm) before homing a second time during
#   homing. Set this to zero to disable the second home. The default
#   is 5mm.
homing_retract_speed: 20
#   Speed to use on the retract move after homing in case this should
#   be different from the homing speed, which is the default for this
#   parameter
second_homing_speed: .75
#   Velocity (in mm/s) of the stepper when performing the second home.
#   The default is homing_speed/2.



# Driver4
[extruder]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
rotation_distance: 22.67895 #for 5mm Shaft Driven Bondtech gearsets
#rotation_distance: 90.7158 #for picolino extruder

gear_ratio: 50:10 #for standard 10t motor

#rotation_distance:   60.507074  #19.26*pi 
#gear_ratio: 45:10 , 41:16    #11.53125:1 #TBG

#gear_ratio: 50:8 #for sherpa mini 8t motor
microsteps: 16
full_steps_per_rotation: 200 #1.8deg Motor
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_cross_section: 40
Pressure_Advance: 0.045
heater_pin: PA2 # HE0
sensor_pin:  PF4 # T0
sensor_type: ATC Semitec 104NT-4-R025H42G
min_temp: 0
max_temp: 300

#[filament_switch_sensor material_0]
#switch_pin: PG12

# Driver5
[extruder1]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 22.67895 #for 5mm Shaft Driven Bondtech gearsets
gear_ratio: 50:10 #for standard 10t motor

#rotation_distance:   60.507074  #19.26*pi 
#gear_ratio: 45:10 , 41:16    #11.53125:1 #TBG

#gear_ratio: 50:8 #for sherpa mini 8t motor
microsteps: 16
full_steps_per_rotation: 200 #1.8deg Motor
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_cross_section: 40
Pressure_Advance: 0.045
heater_pin: PA3 # HE1
sensor_pin: PF5 # T1
sensor_type: ATC Semitec 104NT-4-R025H42G
min_temp: 0
max_temp: 300

#[filament_switch_sensor material_1]
#switch_pin: PG13

# Driver6
#[extruder2]
#step_pin: PE2
#dir_pin: PE3
#enable_pin: !PD4
#heater_pin: PB10 # HE2
#sensor_pin: PF6 # T2
#...

#[filament_switch_sensor material_2]
#switch_pin: PG14

# Driver7
#[extruder3]
#step_pin: PE6
#dir_pin: PA14
#enable_pin: !PE0
#heater_pin: PB11 # HE3
#sensor_pin: PF7 # T3
#...

#[filament_switch_sensor material_3]
#switch_pin: PG15

[heater_bed]
heater_pin: PA1
sensor_pin: PF3 # TB
sensor_type: ATC Semitec 104GT-2
#control: pid
#pid_kp: 72.914
#pid_ki: 2.060
#pid_kd: 645.290
min_temp: 0
max_temp: 130



[controller_fan my_controller_fan]
pin: PA8
fan_speed: 1.0
idle_timeout: 120
stepper: stepper_x, stepper_y, stepper_y1, stepper_z

[fan]
pin: PE5
max_power: 0.8 

# This should be set to 0.8 on most motherboards to give full range of control to your slicer. 

# Anything above 80% duty cycle will be full power on this particular brushless driver.

# To fine-tune the max_power parameter for your particular motherboard, set max_power to 1.0, go into the Klipper dashboard, and increase fan speed 1% at a time until the actual fan speed stops increasing as you increase the fan speed. Divide the fan speed at this point by 100 and enter it into the max_power parameter.

# This parameter defines the maximum power (expressed as a value from 0.0 to 1.0) that the pin may be set to. 

# The value 1.0 allows the pin to be set fully enabled for extended periods, while a value of 0.5 would allow the pin to be enabled for no more than half the time. 

# This setting may be used to limit the total power output (over extended periods) to the fan. 

# If this value is less than 1.0, then fan speed requests will be scaled between zero and max_power (for example, if max_power is 0.9 and a fan speed of 80% is requested, then the fan power will be set to 72%).

shutdown_speed: 0 

# The desired fan speed (expressed as a value from 0.0 to 1.0) if 

# The microcontroller software enters an error state. 

# The default is 0.

cycle_time: 0.005 

# The amount of time (in seconds) for each PWM power cycle to the fan. 

# It is recommended this be 10 milliseconds or greater when using software-based PWM. 

# The default is 0.010 seconds.

hardware_pwm: False 

# Enable this to use hardware PWM instead of software PWM. 

# Most fans do not work well with hardware PWM, so it is not recommended to enable this unless there is an electrical requirement to switch at very high speeds. 

# When using hardware PWM, the actual cycle time is constrained by the implementation and may be significantly different than the requested cycle_time. 

# The default is False.

kick_start_time: 0.0500 

# Time (in seconds) to run the fan at full speed when either first enabling or increasing it by more than 50% (helps get the fan spinning). 

# The default is 0.100 seconds.

off_below: 0.1 

# The blower will not spin with the included brushless driver when the duty cycle is below 8%. When scaled with Max_power at 0.8, the off_below parameter should be set to 0.1. 

# To calibrate this setting, gradually lower the fan speed to determine the lowest input speed that reliably drives the fan without stalls. 

# Set off_below to the duty cycle corresponding to this value (for example, 8% -> 0.08/Max_power -> 0.08/0.8 -> 0.1) or slightly higher. 

# This parameter is the minimum input speed that will power the fan (expressed as a value from 0.0 to 1.0). 

# When a speed lower than off_below is requested, the fan will instead be turned off. 

# This setting may be used to prevent fan stalls and to ensure effective kick starts. 

# To calibrate this setting, start with off_below set to 0.0 and the fan spinning. 

# Gradually lower the fan speed to determine the lowest input speed that reliably drives the fan without stalls. 

# Set off_below to the duty cycle corresponding to this value (for example, 12% -> 0.12) or slightly higher.

#Tachometer_pin:

# Tachometer input pin for monitoring fan speed. A pullup is generally required. 

# This parameter is optional.

#Tachometer_ppr: 1

# When tachometer_pin is specified, this is the number of pulses per revolution of the tachometer signal.

#Tachometer_poll_interval: 0.0005

# When tachometer_pin is specified, this is the polling period of the tachometer pin, in seconds. 

# The default is 0.0015, which is fast enough for fans below 10,000 RPM at 2 PPR. 

# This must be smaller than 30/(tachometer_ppr*rpm), with some margin, where rpm is the 

# maximum speed (in RPM) of the fan.



#[heater_fan fan2]
#pin: PD12

#[heater_fan fan3]
#pin: PD13

#[heater_fan fan4]
#pin: PD14

#[controller_fan fan5]
#pin: PD15


########################################
# TMC2209 configuration
########################################

[tmc2209 stepper_x]
uart_pin: PC4
#diag_pin: PG6
run_current: 0.65
stealthchop_threshold: 0

[tmc2209 stepper_y]
uart_pin: PD11
#diag_pin: PG9
run_current: 0.75
stealthchop_threshold: 0

[tmc2209 stepper_y1]
uart_pin: PC6
#diag_pin: PG10
run_current: 0.75
stealthchop_threshold: 0

[tmc2209 stepper_z]
uart_pin: PC7
#diag_pin: PG11
run_current: 0.650
stealthchop_threshold: 999999

[tmc2209 extruder]
uart_pin: PF2
run_current: 0.8500
hold_current: 0.01
stealthchop_threshold: 0

[tmc2209 extruder1]
uart_pin: PE4
run_current: 0.8500
stealthchop_threshold: 0

#[tmc2209 extruder2]
#uart_pin: PE1
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2209 extruder3]
#uart_pin: PD3
#run_current: 0.800
#stealthchop_threshold: 999999



[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=PC5

# See the sample-lcd.cfg file for definitions of common LCD displays.

# A [probe] section can be defined instead with a pin: setting identical
# to the sensor_pin: for a bltouch
#[bltouch]
#sensor_pin: PB7
#control_pin: PB6
#z_offset: 0

#[neopixel my_neopixel]
#pin: PB0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 70.918
#*# pid_ki = 1.468
#*# pid_kd = 856.334
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 19.682
#*# pid_ki = 1.822
#*# pid_kd = 53.142
#*#
#*# [input_shaper]
#*# shaper_type_x = 2hump_ei
#*# shaper_freq_x = 41.8
#*# shaper_type_y = ei
#*# shaper_freq_y = 48.0
#*#
#*# [stepper_z]
#*# position_endstop = 0
#*#
#*# [extruder1]
#*# control = pid
#*# pid_kp = 17.669
#*# pid_ki = 1.636
#*# pid_kd = 47.706
